openapi: 3.0.0
info:
  description: Den4 Chat Server REST API
  contact:
    email: bp20070@shibaura-it.ac.jp
  title: Chat
  version: '1.0'
servers:
  - url: 'http://localhost:3000'
paths:
  /callback:
    get:
      summary: 認可コード受け取り
      responses:
        '200':
          description: ログイントークン
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      operationId: get-callback
      parameters:
        - schema:
            type: string
          in: query
          name: code
          description: Authorization code
        - schema:
            type: string
          in: query
          name: state
          description: State parameter
      description: OAuth2(OP)から発行された認可コードを受け取る
      tags:
        - Account
  /account/logout:
    post:
      summary: ログアウト
      operationId: post-account-logout
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: セッショントークン
      description: チャットサーバーからログアウトする
      tags:
        - Account
  /account/status:
    get:
      summary: アカウント状態取得
      tags:
        - Account
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      operationId: get-account-status
      description: 指定したアカウントのログイン状態を示す
      parameters:
        - schema:
            type: string
          in: query
          name: id
          description: アカウントID
    parameters: []
    put:
      summary: アカウント状態変更
      operationId: put-account-status-accountUUID
      responses:
        '200':
          description: OK
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: セッショントークン
        - schema:
            type: string
          in: query
          name: id
          description: アカウントID
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
            examples:
              ONLINE:
                value:
                  status: online
              OFFLINE:
                value:
                  status: offline
              AFK:
                value:
                  status: afk
              BUSY:
                value:
                  status: busy
        description: 状態を指定するJSON
      description: ログイン状態を更新する
      tags:
        - Account
  /message:
    parameters: []
    post:
      summary: メッセージ送信
      operationId: post-message-account-accountUUID
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      description: メッセージを送信する
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: ログイントークン
          required: true
        - schema:
            type: string
          in: query
          name: target
          description: 送信先ID (個人ID/ルームID)
          required: true
        - schema:
            type: string
          in: query
          name: server
          description: 取得元 (サーバー)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  type: string
                mention:
                  type: array
                  items:
                    type: string
      tags:
        - Message
    get:
      summary: メッセージ取得
      operationId: get-message-account
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Chat'
              examples:
                example-1:
                  value:
                    - author: 32ad2cdb-22a2-48aa-a42c-1c53a9afc4bd
                      body: こんにちは！
                      memo:
                        - type: stamp
                          data: 'http://example.com/stamp1.jpg'
                      createdAt: 0
                      editedAt: 0
                      id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    - author: 3ggg2cdb-66a2-48aa-a99c-1c53lllfc4bd
                      body: Hello World.
                      memo:
                        - {}
                      createdAt: 0
                      editedAt: 0
                      id: 49555ca-6276-5000-uuub-53cbbbba6f08
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - schema:
            type: integer
          in: query
          name: offset
          description: 最新のチャットから取得したいチャットの先頭までの件数
          required: true
        - schema:
            type: string
          in: query
          name: count
          description: 取得する件数
          required: true
        - schema:
            type: string
          in: query
          name: target
          description: 取得元 (個人ID/ルームID)
          required: true
        - schema:
            type: string
          in: header
          name: Authorization
          description: ログイントークン
          required: true
        - schema:
            type: string
          in: query
          name: server
          description: 取得元 (サーバー)
      description: メッセージを取得する
      tags:
        - Message
    delete:
      summary: メッセージ削除
      operationId: delete-message
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      description: メッセージを削除する
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: ログイントークン
        - schema:
            type: string
          in: query
          name: target
          description: 送信先ID (個人ID/ルームID)
        - schema:
            type: string
          in: query
          name: id
          description: メッセージID
      tags:
        - Message
    put:
      summary: メッセージ更新
      operationId: put-message
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: ログイントークン
          required: true
        - schema:
            type: string
          in: query
          name: target
          description: 送信先ID (個人ID/ルームID)
          required: true
        - schema:
            type: string
          in: query
          name: server
          description: サーバー
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                body:
                  type: string
                id:
                  type: string
      description: 送信したチャットを更新する
      tags:
        - Message
  /channel:
    get:
      summary: チャンネル情報取得
      tags:
        - Channel
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChatRoom'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      operationId: get-channel
      description: チャンネル情報を取得する
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: ログイントークン
    post:
      summary: チャンネル作成
      operationId: post-channel
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      description: チャンネルを作成する
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: ログイントークン
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      tags:
        - Channel
    put:
      summary: チャンネル更新
      operationId: put-channel
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: ログイントークン
        - schema:
            type: string
          in: query
          name: id
          description: チャンネルID
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                permission:
                  type: array
                  items:
                    type: string
                type:
                  type: string
            examples:
              Voice Channnel:
                value:
                  name: テストボイスチャンネル
                  permission:
                    - tag1
                    - tag3
                  type: voice
              Text Channnel:
                value:
                  name: テキストチャンネル1
                  permission:
                    - tag1
                    - tag2
                  type: text
      description: チャンネルを更新する
      tags:
        - Channel
    delete:
      summary: チャンネル削除
      operationId: delete-channel
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      description: チャンネルを更新する
      parameters:
        - schema:
            type: string
          in: query
          name: id
          description: チャンネルID
        - schema:
            type: string
          in: header
          name: Authorization
          description: ログイントークン
      tags:
        - Channel
  /server:
    get:
      summary: サーバー情報取得
      tags:
        - Server
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Server'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      operationId: get-server
      description: サーバーの情報を取得する
      parameters:
        - schema:
            type: string
          in: query
          name: id
          description: サーバーID
    post:
      summary: サーバー登録
      operationId: post-server
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      description: サーバーの情報を登録する
      tags:
        - Server
    put:
      summary: サーバー情報更新
      operationId: put-server
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      description: サーバーの情報を更新する
      tags:
        - Server
    delete:
      summary: サーバー削除
      operationId: delete-server
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          description: ログイントークン
        - schema:
            type: string
          in: query
          name: id
          description: サーバーID
      description: サーバーを削除する
      tags:
        - Server
components:
  schemas:
    Chat:
      title: Chat
      type: object
      description: チャット
      x-examples:
        example:
          author: 32ad2cdb-22a2-48aa-a42c-1c53a9afc4bd
          body: こんにちは！
          memo:
            - dataType: stamp
              count: 2
              data: 52ad2cdb-32j6-48aa-a42c-7c53d9afc4ld
            - dataType: stamp
              count: 0
              data: 52ad2cdb-32j6-48aa-a42c-7c53d9afc4ld
          createdAt: 0
          editedAt: 0
          id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
      properties:
        author:
          type: string
          description: 発信者
        body:
          type: string
          description: メッセージ本文
        memo:
          description: 拡張領域
          type: array
          items:
            type: object
        createdAt:
          type: number
          description: 発信日時(UNIX TIME)
        editedAt:
          type: number
          description: 編集日時 (UNIX TIME)
        id:
          type: string
          description: メッセージID
      required:
        - author
        - body
        - memo
        - createdAt
        - editedAt
        - id
    Server:
      title: Server
      type: object
      x-examples: {}
      properties:
        id:
          type: string
          format: uuid
        room:
          type: array
          items:
            $ref: '#/components/schemas/ChatRoom'
        icon:
          type: string
          format: uri
        invite:
          type: array
          items:
            type: string
            format: uri
    ChatRoom:
      title: ChatRoom
      type: object
      x-examples: {}
      properties:
        id:
          type: string
          format: uuid
        serverID:
          type: string
          format: uuid
        name:
          type: string
        type:
          type: string
          default: text
tags:
  - name: Account
  - name: Channel
  - name: Message
  - name: Server
